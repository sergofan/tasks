# REQUIRED
# This service is based on the type definitions in the two files
# `database/types.graphql` and `database/enums.graphql`
datamodel:
  datamodel.graphql

# OPTIONAL
# The endpoint represents the HTTP endpoint for your Prisma API. It encodes
# several pieces of information:
# * Prisma server (`localhost:4466` in this example)
# * Service name (`myservice` in this example)
# * Stage (`dev` in this example)
# NOTE: When service name and stage are set to `default`, they can be omitted.
# Meaning http://myserver.com/default/default can be written as http://myserver.com.

#endpoint: http://localhost:4466
endpoint: https://eu1.prisma.sh/uomgo/task/dev

# OPTIONAL
# The secret is used to create JSON web tokens (JWTs). These tokens need to be
# attached in the `Authorization` header of HTTP requests against the Prisma endpoint.
# WARNING: If the secret is not provided, the Prisma API can be accessed
# without authentication!
# secret: mysecret123

# OPTIONAL
# A "post-deployment" hook that first downloads the GraphQL schema from an endpoint configured
# in `.graphqlconfig` and then invokes a code generation process.
# hooks:
#   post-deploy:
#     - graphql get-schema --project db
#     - graphql prepare

# OPTIONAL
# This service has one event subscription configured. The corresponding
# subscription query is located in `database/subscriptions/welcomeEmail.graphql`.
# When the subscription fires, the specified `webhook` is invoked via HTTP.
# subscriptions:
#   sendWelcomeEmail:
#     query: database/subscriptions/sendWelcomeEmail.graphql
#     webhook:
#       url: https://${self:custom.serverlessEndpoint}/sendWelcomeEmail
#       headers:
#         Authorization: ${env:MY_ENDPOINT_SECRET}

# OPTIONAL
# This service only defines one custom variable that's referenced in
# the `webhook` of the `subscription`
# custom:
#   serverlessEndpoint: https://bcdeaxokbj.execute-api.eu-west-1.amazonaws.com/dev
